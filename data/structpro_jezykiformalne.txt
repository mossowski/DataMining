In this paper we prove a Kleene type theorem for shuffle automata.
We show that for shuffle automata in the standard form one can define
the shuffle expression denoting the language of the automaton.

It is a common feature of many classes of formal languages that they have their
transition based models, for example regular languages and finite
automata, context free languages and pushdown automata, vector addition
systems and Petri nets etc. Different representations of the same
construct emphasize some properties and are used for different purposes.
Shuffle automata were introduced in \cite{JJ9} as a transition based model for
shuffle languages.
In \cite{JS} they were used as a tool to solve the open problem
about the computational
complexity of shuffle languages generated by shuffle expressions. Shuffle expressions
emerge from the class of regular expressions by the addition of two operations
-- shuffle and shuffle closure. It was established in \cite{JS} that
shuffle languages are accepted by nondeterministic Turing
machines in logarithmic space. Thus they are in {\bf P}.

The aim of this paper is to study the properties of shuffle automata and in
particular to give an algorithm which assigns to each shuffle automaton
a shuffle expression denoting its language.

The paper is organized as follows. In Section 2 we recall the notions of
shuffle expressions and  shuffle automata.
In Section 3 we introduce the standard form of shuffle automata and describe
general properties of the graph of a shuffle automaton in the standard form.
Finally, in Section 4 we give an effective procedure of assigning to the
automaton a shuffle expression denoting the language of the automaton.